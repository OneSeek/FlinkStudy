// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: column.proto

package utils;

public final class Column {
  private Column() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ColOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string ColumName = 1;
    /**
     * <code>required string ColumName = 1;</code>
     */
    boolean hasColumName();
    /**
     * <code>required string ColumName = 1;</code>
     */
    String getColumName();
    /**
     * <code>required string ColumName = 1;</code>
     */
    com.google.protobuf.ByteString
        getColumNameBytes();

    // required string ColumType = 2;
    /**
     * <code>required string ColumType = 2;</code>
     */
    boolean hasColumType();
    /**
     * <code>required string ColumType = 2;</code>
     */
    String getColumType();
    /**
     * <code>required string ColumType = 2;</code>
     */
    com.google.protobuf.ByteString
        getColumTypeBytes();

    // required string ColumValue = 3;
    /**
     * <code>required string ColumValue = 3;</code>
     */
    boolean hasColumValue();
    /**
     * <code>required string ColumValue = 3;</code>
     */
    String getColumValue();
    /**
     * <code>required string ColumValue = 3;</code>
     */
    com.google.protobuf.ByteString
        getColumValueBytes();
  }
  /**
   * Protobuf type {@code com.dtdream.dmall.asb.datacompare.entity.Col}
   */
  public static final class Col extends
      com.google.protobuf.GeneratedMessage
      implements ColOrBuilder {
    // Use Col.newBuilder() to construct.
    private Col(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Col(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Col defaultInstance;
    public static Col getDefaultInstance() {
      return defaultInstance;
    }

    public Col getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Col(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              columName_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              columType_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              columValue_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return utils.Column.internal_static_com_dtdream_dmall_asb_datacompare_entity_Col_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return utils.Column.internal_static_com_dtdream_dmall_asb_datacompare_entity_Col_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Col.class, Builder.class);
    }

    public static com.google.protobuf.Parser<Col> PARSER =
        new com.google.protobuf.AbstractParser<Col>() {
      public Col parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Col(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<Col> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string ColumName = 1;
    public static final int COLUMNAME_FIELD_NUMBER = 1;
    private Object columName_;
    /**
     * <code>required string ColumName = 1;</code>
     */
    public boolean hasColumName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string ColumName = 1;</code>
     */
    public String getColumName() {
      Object ref = columName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          columName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string ColumName = 1;</code>
     */
    public com.google.protobuf.ByteString
        getColumNameBytes() {
      Object ref = columName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        columName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string ColumType = 2;
    public static final int COLUMTYPE_FIELD_NUMBER = 2;
    private Object columType_;
    /**
     * <code>required string ColumType = 2;</code>
     */
    public boolean hasColumType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string ColumType = 2;</code>
     */
    public String getColumType() {
      Object ref = columType_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          columType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string ColumType = 2;</code>
     */
    public com.google.protobuf.ByteString
        getColumTypeBytes() {
      Object ref = columType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        columType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string ColumValue = 3;
    public static final int COLUMVALUE_FIELD_NUMBER = 3;
    private Object columValue_;
    /**
     * <code>required string ColumValue = 3;</code>
     */
    public boolean hasColumValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string ColumValue = 3;</code>
     */
    public String getColumValue() {
      Object ref = columValue_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          columValue_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string ColumValue = 3;</code>
     */
    public com.google.protobuf.ByteString
        getColumValueBytes() {
      Object ref = columValue_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        columValue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      columName_ = "";
      columType_ = "";
      columValue_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasColumName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasColumType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasColumValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getColumNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getColumTypeBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getColumValueBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getColumNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getColumTypeBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getColumValueBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Col parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Col parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Col parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Col parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Col parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Col parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Col parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Col parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Col parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Col parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Col prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.dtdream.dmall.asb.datacompare.entity.Col}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements ColOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return utils.Column.internal_static_com_dtdream_dmall_asb_datacompare_entity_Col_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return utils.Column.internal_static_com_dtdream_dmall_asb_datacompare_entity_Col_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Col.class, Builder.class);
      }

      // Construct using com.dtdream.dmall.asb.datacompare.entity.Column.Col.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        columName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        columType_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        columValue_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return utils.Column.internal_static_com_dtdream_dmall_asb_datacompare_entity_Col_descriptor;
      }

      public Col getDefaultInstanceForType() {
        return Col.getDefaultInstance();
      }

      public Col build() {
        Col result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Col buildPartial() {
        Col result = new Col(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.columName_ = columName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.columType_ = columType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.columValue_ = columValue_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Col) {
          return mergeFrom((Col)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Col other) {
        if (other == Col.getDefaultInstance()) return this;
        if (other.hasColumName()) {
          bitField0_ |= 0x00000001;
          columName_ = other.columName_;
          onChanged();
        }
        if (other.hasColumType()) {
          bitField0_ |= 0x00000002;
          columType_ = other.columType_;
          onChanged();
        }
        if (other.hasColumValue()) {
          bitField0_ |= 0x00000004;
          columValue_ = other.columValue_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasColumName()) {
          
          return false;
        }
        if (!hasColumType()) {
          
          return false;
        }
        if (!hasColumValue()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Col parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Col) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string ColumName = 1;
      private Object columName_ = "";
      /**
       * <code>required string ColumName = 1;</code>
       */
      public boolean hasColumName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string ColumName = 1;</code>
       */
      public String getColumName() {
        Object ref = columName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          columName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string ColumName = 1;</code>
       */
      public com.google.protobuf.ByteString
          getColumNameBytes() {
        Object ref = columName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          columName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string ColumName = 1;</code>
       */
      public Builder setColumName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        columName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string ColumName = 1;</code>
       */
      public Builder clearColumName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        columName_ = getDefaultInstance().getColumName();
        onChanged();
        return this;
      }
      /**
       * <code>required string ColumName = 1;</code>
       */
      public Builder setColumNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        columName_ = value;
        onChanged();
        return this;
      }

      // required string ColumType = 2;
      private Object columType_ = "";
      /**
       * <code>required string ColumType = 2;</code>
       */
      public boolean hasColumType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string ColumType = 2;</code>
       */
      public String getColumType() {
        Object ref = columType_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          columType_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string ColumType = 2;</code>
       */
      public com.google.protobuf.ByteString
          getColumTypeBytes() {
        Object ref = columType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          columType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string ColumType = 2;</code>
       */
      public Builder setColumType(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        columType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string ColumType = 2;</code>
       */
      public Builder clearColumType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        columType_ = getDefaultInstance().getColumType();
        onChanged();
        return this;
      }
      /**
       * <code>required string ColumType = 2;</code>
       */
      public Builder setColumTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        columType_ = value;
        onChanged();
        return this;
      }

      // required string ColumValue = 3;
      private Object columValue_ = "";
      /**
       * <code>required string ColumValue = 3;</code>
       */
      public boolean hasColumValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string ColumValue = 3;</code>
       */
      public String getColumValue() {
        Object ref = columValue_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          columValue_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string ColumValue = 3;</code>
       */
      public com.google.protobuf.ByteString
          getColumValueBytes() {
        Object ref = columValue_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          columValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string ColumValue = 3;</code>
       */
      public Builder setColumValue(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        columValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string ColumValue = 3;</code>
       */
      public Builder clearColumValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        columValue_ = getDefaultInstance().getColumValue();
        onChanged();
        return this;
      }
      /**
       * <code>required string ColumValue = 3;</code>
       */
      public Builder setColumValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        columValue_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.dtdream.dmall.asb.datacompare.entity.Col)
    }

    static {
      defaultInstance = new Col(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.dtdream.dmall.asb.datacompare.entity.Col)
  }

  public interface DataOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;
    /**
     * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
     */
    java.util.List<Col>
        getColumnsList();
    /**
     * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
     */
    Col getColumns(int index);
    /**
     * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
     */
    int getColumnsCount();
    /**
     * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
     */
    java.util.List<? extends ColOrBuilder>
        getColumnsOrBuilderList();
    /**
     * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
     */
    ColOrBuilder getColumnsOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code com.dtdream.dmall.asb.datacompare.entity.Data}
   */
  public static final class Data extends
      com.google.protobuf.GeneratedMessage
      implements DataOrBuilder {
    // Use Data.newBuilder() to construct.
    private Data(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Data(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Data defaultInstance;
    public static Data getDefaultInstance() {
      return defaultInstance;
    }

    public Data getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Data(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                columns_ = new java.util.ArrayList<Col>();
                mutable_bitField0_ |= 0x00000001;
              }
              columns_.add(input.readMessage(Col.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          columns_ = java.util.Collections.unmodifiableList(columns_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return utils.Column.internal_static_com_dtdream_dmall_asb_datacompare_entity_Data_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return utils.Column.internal_static_com_dtdream_dmall_asb_datacompare_entity_Data_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Data.class, Builder.class);
    }

    public static com.google.protobuf.Parser<Data> PARSER =
        new com.google.protobuf.AbstractParser<Data>() {
      public Data parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Data(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<Data> getParserForType() {
      return PARSER;
    }

    // repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;
    public static final int COLUMNS_FIELD_NUMBER = 1;
    private java.util.List<Col> columns_;
    /**
     * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
     */
    public java.util.List<Col> getColumnsList() {
      return columns_;
    }
    /**
     * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
     */
    public java.util.List<? extends ColOrBuilder>
        getColumnsOrBuilderList() {
      return columns_;
    }
    /**
     * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
     */
    public int getColumnsCount() {
      return columns_.size();
    }
    /**
     * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
     */
    public Col getColumns(int index) {
      return columns_.get(index);
    }
    /**
     * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
     */
    public ColOrBuilder getColumnsOrBuilder(
        int index) {
      return columns_.get(index);
    }

    private void initFields() {
      columns_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getColumnsCount(); i++) {
        if (!getColumns(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < columns_.size(); i++) {
        output.writeMessage(1, columns_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < columns_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, columns_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Data parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Data parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Data parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Data parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Data parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Data parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Data parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Data parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Data parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Data parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Data prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.dtdream.dmall.asb.datacompare.entity.Data}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return utils.Column.internal_static_com_dtdream_dmall_asb_datacompare_entity_Data_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return utils.Column.internal_static_com_dtdream_dmall_asb_datacompare_entity_Data_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Data.class, Builder.class);
      }

      // Construct using com.dtdream.dmall.asb.datacompare.entity.Column.Data.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getColumnsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (columnsBuilder_ == null) {
          columns_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          columnsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return utils.Column.internal_static_com_dtdream_dmall_asb_datacompare_entity_Data_descriptor;
      }

      public Data getDefaultInstanceForType() {
        return Data.getDefaultInstance();
      }

      public Data build() {
        Data result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Data buildPartial() {
        Data result = new Data(this);
        int from_bitField0_ = bitField0_;
        if (columnsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            columns_ = java.util.Collections.unmodifiableList(columns_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.columns_ = columns_;
        } else {
          result.columns_ = columnsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Data) {
          return mergeFrom((Data)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Data other) {
        if (other == Data.getDefaultInstance()) return this;
        if (columnsBuilder_ == null) {
          if (!other.columns_.isEmpty()) {
            if (columns_.isEmpty()) {
              columns_ = other.columns_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureColumnsIsMutable();
              columns_.addAll(other.columns_);
            }
            onChanged();
          }
        } else {
          if (!other.columns_.isEmpty()) {
            if (columnsBuilder_.isEmpty()) {
              columnsBuilder_.dispose();
              columnsBuilder_ = null;
              columns_ = other.columns_;
              bitField0_ = (bitField0_ & ~0x00000001);
              columnsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getColumnsFieldBuilder() : null;
            } else {
              columnsBuilder_.addAllMessages(other.columns_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getColumnsCount(); i++) {
          if (!getColumns(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Data parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Data) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;
      private java.util.List<Col> columns_ =
        java.util.Collections.emptyList();
      private void ensureColumnsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          columns_ = new java.util.ArrayList<Col>(columns_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Col, Col.Builder, ColOrBuilder> columnsBuilder_;

      /**
       * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
       */
      public java.util.List<Col> getColumnsList() {
        if (columnsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(columns_);
        } else {
          return columnsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
       */
      public int getColumnsCount() {
        if (columnsBuilder_ == null) {
          return columns_.size();
        } else {
          return columnsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
       */
      public Col getColumns(int index) {
        if (columnsBuilder_ == null) {
          return columns_.get(index);
        } else {
          return columnsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
       */
      public Builder setColumns(
          int index, Col value) {
        if (columnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureColumnsIsMutable();
          columns_.set(index, value);
          onChanged();
        } else {
          columnsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
       */
      public Builder setColumns(
          int index, Col.Builder builderForValue) {
        if (columnsBuilder_ == null) {
          ensureColumnsIsMutable();
          columns_.set(index, builderForValue.build());
          onChanged();
        } else {
          columnsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
       */
      public Builder addColumns(Col value) {
        if (columnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureColumnsIsMutable();
          columns_.add(value);
          onChanged();
        } else {
          columnsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
       */
      public Builder addColumns(
          int index, Col value) {
        if (columnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureColumnsIsMutable();
          columns_.add(index, value);
          onChanged();
        } else {
          columnsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
       */
      public Builder addColumns(
          Col.Builder builderForValue) {
        if (columnsBuilder_ == null) {
          ensureColumnsIsMutable();
          columns_.add(builderForValue.build());
          onChanged();
        } else {
          columnsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
       */
      public Builder addColumns(
          int index, Col.Builder builderForValue) {
        if (columnsBuilder_ == null) {
          ensureColumnsIsMutable();
          columns_.add(index, builderForValue.build());
          onChanged();
        } else {
          columnsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
       */
      public Builder addAllColumns(
          Iterable<? extends Col> values) {
        if (columnsBuilder_ == null) {
          ensureColumnsIsMutable();
          super.addAll(values, columns_);
          onChanged();
        } else {
          columnsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
       */
      public Builder clearColumns() {
        if (columnsBuilder_ == null) {
          columns_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          columnsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
       */
      public Builder removeColumns(int index) {
        if (columnsBuilder_ == null) {
          ensureColumnsIsMutable();
          columns_.remove(index);
          onChanged();
        } else {
          columnsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
       */
      public Col.Builder getColumnsBuilder(
          int index) {
        return getColumnsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
       */
      public ColOrBuilder getColumnsOrBuilder(
          int index) {
        if (columnsBuilder_ == null) {
          return columns_.get(index);  } else {
          return columnsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
       */
      public java.util.List<? extends ColOrBuilder>
           getColumnsOrBuilderList() {
        if (columnsBuilder_ != null) {
          return columnsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(columns_);
        }
      }
      /**
       * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
       */
      public Col.Builder addColumnsBuilder() {
        return getColumnsFieldBuilder().addBuilder(
            Col.getDefaultInstance());
      }
      /**
       * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
       */
      public Col.Builder addColumnsBuilder(
          int index) {
        return getColumnsFieldBuilder().addBuilder(
            index, Col.getDefaultInstance());
      }
      /**
       * <code>repeated .com.dtdream.dmall.asb.datacompare.entity.Col columns = 1;</code>
       */
      public java.util.List<Col.Builder>
           getColumnsBuilderList() {
        return getColumnsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Col, Col.Builder, ColOrBuilder>
          getColumnsFieldBuilder() {
        if (columnsBuilder_ == null) {
          columnsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Col, Col.Builder, ColOrBuilder>(
                  columns_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          columns_ = null;
        }
        return columnsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.dtdream.dmall.asb.datacompare.entity.Data)
    }

    static {
      defaultInstance = new Data(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.dtdream.dmall.asb.datacompare.entity.Data)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_dtdream_dmall_asb_datacompare_entity_Col_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_dtdream_dmall_asb_datacompare_entity_Col_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_dtdream_dmall_asb_datacompare_entity_Data_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_dtdream_dmall_asb_datacompare_entity_Data_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\014column.proto\022(com.dtdream.dmall.asb.da" +
      "tacompare.entity\"?\n\003Col\022\021\n\tColumName\030\001 \002" +
      "(\t\022\021\n\tColumType\030\002 \002(\t\022\022\n\nColumValue\030\003 \002(" +
      "\t\"F\n\004Data\022>\n\007columns\030\001 \003(\0132-.com.dtdream" +
      ".dmall.asb.datacompare.entity.Col"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_dtdream_dmall_asb_datacompare_entity_Col_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_dtdream_dmall_asb_datacompare_entity_Col_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_dtdream_dmall_asb_datacompare_entity_Col_descriptor,
              new String[] { "ColumName", "ColumType", "ColumValue", });
          internal_static_com_dtdream_dmall_asb_datacompare_entity_Data_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_dtdream_dmall_asb_datacompare_entity_Data_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_dtdream_dmall_asb_datacompare_entity_Data_descriptor,
              new String[] { "Columns", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
